import time

# Non-recursive (Iterative) function to calculate and print Fibonacci series
def fibonacci_iterative(n):
    a, b = 0, 1
    for i in range(n):
        print(a, end=' ')
        a, b = b, a + b
    print()  # To move to the next line after printing the series

# Recursive function to calculate and return Fibonacci series as a list
def fibonacci_recursive(n):
    if n == 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib = fibonacci_recursive(n - 1)
        fib.append(fib[-1] + fib[-2])
        return fib

choice = int(input("1: non recursive, 2: recursive ="))

# Input: Fibonacci term count
n = int(input("Enter nth Fibonacci term: "))



if choice==1:
    # Measuring execution time for iterative approach
    print("Iterative approach:")
    start_time = time.time()
    fibonacci_iterative(n)
    end_time = time.time()
    print(f"Execution time (iterative): {end_time - start_time:.6f} seconds\n")

if choice==2:
    # Measuring execution time for recursive approach
    print("Recursive approach:")
    start_time = time.time()
    fib_series = fibonacci_recursive(n)
    end_time = time.time()
    print(f"Fibonacci series up to {n} numbers:", fib_series)
    print(f"Execution time (recursive): {end_time - start_time:.6f} seconds")

